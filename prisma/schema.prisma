// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleType {
  SUPPERADMIN
  ADMIN
  USER
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String
  lastName     String
  birthday     DateTime
  email        String         @unique
  password     String
  thumbnail    String
  phone        String
  gender       String
  role         RoleType
  deleteFlg    Boolean
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  Notification Notification[]
  UserProject  UserProject[]
  UserGroup    UserGroup[]
  UserItem     UserItem[]
  UserTask     UserTask[]
}

model Notification {
  id           Int     @id @default(autoincrement())
  id_user      Int
  User         User?   @relation(fields: [id_user], references: [id])
  descriptions String
  deleteFlg    Boolean @default(true)
}

model Project {
  id          Int           @id @default(autoincrement())
  name        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  Group       Group[]
  UserProject UserProject[]
}

model Group {
  id         Int         @id @default(autoincrement())
  name       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime
  id_project Int
  Project    Project?    @relation(fields: [id_project], references: [id])
  Item       Item[]
  UserGroup  UserGroup[]
}

model Item {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime
  id_group  Int
  Group     Group?     @relation(fields: [id_group], references: [id])
  Task      Task[]
  UserItem  UserItem[]
}

model Task {
  id      Int   @id @default(autoincrement())
  id_item Int?
  Item    Item? @relation(fields: [id_item], references: [id])

  descriptions String

  userManager Int

  start_Time DateTime

  end_Time DateTime

  planned_Time DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime

  level    String
  UserTask UserTask[]
}

model UserProject {
  id         Int      @id @default(autoincrement())
  id_user    Int
  id_project Int?
  User       User?    @relation(fields: [id_user], references: [id])
  Project    Project? @relation(fields: [id_project], references: [id])
}

model UserGroup {
  id       Int    @id @default(autoincrement())
  id_user  Int
  id_group Int?
  User     User?  @relation(fields: [id_user], references: [id])
  Group    Group? @relation(fields: [id_group], references: [id])
}

model UserItem {
  id      Int   @id @default(autoincrement())
  id_user Int
  id_item Int?
  User    User? @relation(fields: [id_user], references: [id])
  Item    Item? @relation(fields: [id_item], references: [id])
}

model UserTask {
  id      Int   @id @default(autoincrement())
  id_user Int
  id_task Int?
  User    User? @relation(fields: [id_user], references: [id])
  Task    Task? @relation(fields: [id_task], references: [id])
}
